# Generated by Django 4.2.7 on 2025-07-23 21:30

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FoodCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('name_es', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#007bff', max_length=7)),
            ],
            options={
                'verbose_name_plural': 'Food Categories',
            },
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('name_es', models.CharField(blank=True, db_index=True, max_length=200, null=True)),
                ('serving_size', models.IntegerField(default=100, help_text='Tamaño de porción en gramos')),
                ('calories', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('protein', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('carbohydrate', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('fat', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('fiber', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('sugars', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_fat', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('saturated_fat', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('monounsaturated_fat', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('polyunsaturated_fat', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('trans_fat', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('cholesterol', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('sodium', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('potassium', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('calcium', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('iron', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('magnesium', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('phosphorus', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('zinc', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('vitamin_a', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('vitamin_c', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('vitamin_d', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('vitamin_e', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('vitamin_k', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('thiamin', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('riboflavin', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('niacin', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('vitamin_b6', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('vitamin_b12', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('folate', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('protein_density', models.FloatField(blank=True, null=True)),
                ('nutrient_density_score', models.FloatField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('usda_fdc_id', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('data_source', models.CharField(default='local', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='nutrition.foodcategory')),
            ],
        ),
        migrations.CreateModel(
            name='FoodAlias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(db_index=True, max_length=200)),
                ('language', models.CharField(default='es', max_length=5)),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aliases', to='nutrition.food')),
            ],
            options={
                'unique_together': {('food', 'alias')},
            },
        ),
        migrations.AddIndex(
            model_name='food',
            index=models.Index(fields=['name'], name='nutrition_f_name_caa2b0_idx'),
        ),
        migrations.AddIndex(
            model_name='food',
            index=models.Index(fields=['name_es'], name='nutrition_f_name_es_471728_idx'),
        ),
        migrations.AddIndex(
            model_name='food',
            index=models.Index(fields=['calories'], name='nutrition_f_calorie_679c5f_idx'),
        ),
        migrations.AddIndex(
            model_name='food',
            index=models.Index(fields=['protein'], name='nutrition_f_protein_10ef7e_idx'),
        ),
    ]
